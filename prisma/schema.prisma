generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Professional {
  id               String    @id @map("id")
  name             String?
  profession       String?
  avgClientsSurvey Int?
  email            String?   @unique
  whatsapp         String?   @unique
  clients          Client[] 
  programs         Program[]
}

model Client {
  id                       String                 @id @map("id")
  name                     String?
  whatsapp                 String?               @unique 
  email                    String?               @unique
  genre                    String?
  age                      Int?
  professional             Professional           @relation(fields: [professionalId], references: [id])
  professionalId           String
  programs                 Program[]
  notificationSubscription WebPushSubscriptions[]
}

model Program {
  id              String                 @id @map("id")
  name            String
  client          Client                 @relation(fields: [clientId], references: [id]) 
  clientId        String 
  professional    Professional           @relation(fields: [professionalId], references: [id])
  professionalId  String
  start_date      DateTime
  duration        Int
  end_date        DateTime
  enabled_metrics Json
  daysActive      Int
  daysPaid        Int
  status          String
  daily_data      DailyData[]
  subscription    WebPushSubscriptions[]
}

model DailyData {
  program   Program  @relation(fields: [programId], references: [id])
  programId String
  date      DateTime
  diet      Boolean?
  exercise  Boolean?
  weight    Decimal?
  cardio    Int?
  notes        String?
  checkpointId String?
  Checkpoint   Checkpoint? @relation(fields: [checkpointId], references: [id])

  @@id([programId, date])
}

model Checkpoint {
  id              String      @id @default(uuid())
  formUrl         String?
  programId       String
  description     String
  date            DateTime
  dietPlanUrl     String?
  trainingPlanUrl String?
  formFilled      Boolean?
  daily_data      DailyData[]
}

model WebPushSubscriptions {
  id                  String   @id @default(uuid())
  subscription        Json
  clientId            String
  programId           String
  device              String   @default("")
  notificationsSent   Int      @default(0)
  openedNotifications Int      @default(0)
  client              Client   @relation(fields: [clientId], references: [id])
  program             Program  @relation(fields: [programId], references: [id])
  createdAt           DateTime @default(now())
}
